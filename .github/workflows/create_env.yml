on:
  pull_request:
    types: [reopened, opened, synchronize, edited]

name: Create PR Environment
jobs:
  create_env:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      BRANCH_NAME: ${{ github.head_ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: 'Change Directory'
        run: "cd app"

      - name: 'Terraform Setup'
        uses: hashicorp/setup-terraform@v1
        with:
          # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 'Terraform Format'
        working-directory: "infra"
        run: terraform fmt -check

      - name: 'Terraform Init'
        id: init
        working-directory: "infra"
        run: terraform init -backend-config="key=${{ env.BRANCH_NAME }}.xts.tfstate"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: 'Terraform Plan'
        id: plan
        working-directory: "infra"
        run: terraform plan

      - name: 'Terraform Apply'
        working-directory: "infra"
        run: terraform apply -auto-approve

      - name: 'Terraform Output'
        working-directory: "infra"
        id: terraform_output
        run: terraform output environment_url

      - run: echo ${{ steps.terraform_output.outputs.stdout }}

      - run: docker build --tag xt/react-app .
      - name: Push to ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-1
          image: xt/react-app:latest

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.terraform_output.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            [Environment Link](https://www.${{ steps.terraform_output.outputs.stdout }})

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

